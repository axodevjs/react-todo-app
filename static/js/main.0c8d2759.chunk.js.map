{"version":3,"sources":["components/ToDo/ToDo.jsx","components/ToDos.jsx","App.js","reportWebVitals.js","index.js"],"names":["ToDo","props","id","className","onClick","onDelete","todo","name","favorite","onFavorite","AddToDo","addTodo","useState","value","setValue","onSubmit","e","preventDefault","type","placeholder","maxLength","onChange","target","ToDos","todos","setTodos","title","document","useEffect","localStorage","parseTodos","JSON","parse","deleteTodo","index","allTodos","splice","stringify","favoriteTodo","Todo","filter","item","i","todoList","map","newTodos","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"mMAkBeA,MAhBf,SAAcC,GACV,OACI,sBAAKC,GAAID,EAAMC,GAAIC,UAAU,OAA7B,UACI,qBAAKA,UAAU,WAAWC,QAAS,WAAQH,EAAMI,SAASJ,EAAMC,OAEhE,qBAAKC,UAAU,OAAf,SAAuBF,EAAMK,KAAKC,QAET,IAAxBN,EAAMK,KAAKE,SACR,qBAAKL,UAAU,WAAWC,QAAS,WAAQH,EAAMQ,WAAWR,EAAMC,OAElE,qBAAKC,UAAU,eAAeC,QAAS,WAAQH,EAAMQ,WAAWR,EAAMC,WCRtF,SAASQ,EAAT,GAA+B,IAAZC,EAAW,EAAXA,QAAW,EACAC,mBAAS,IADT,mBACnBC,EADmB,KACZC,EADY,KAU1B,OACI,sBAAMC,SARW,SAAAC,GACjBA,EAAEC,iBACGJ,IACLF,EAAQE,GACRC,EAAS,MAIqBX,UAAU,WAAxC,SACI,uBACIe,KAAK,OACLX,KAAK,OACLY,YAAY,wFACZN,MAAOA,EACPO,UAAU,MACVC,SAAU,SAAAL,GAAC,OAAIF,EAASE,EAAEM,OAAOT,YA+ElCU,MAzEf,SAAetB,GAAQ,IAAD,IACQW,mBAAS,IADjB,mBACXY,EADW,KACJC,EADI,KAIE,OAAhBxB,EAAMyB,QACNC,SAASD,MAAQzB,EAAMyB,OAI3BE,qBAAU,WACN,GAA2B,OAAvBC,aAAaL,MAAgB,CAC7B,IAAIM,EAAaC,KAAKC,MAAMH,aAAaL,OACzCC,EAASK,MAEd,IAEH,IAQMG,EAAa,SAACC,GAChB,IAAIC,EAAQ,YAAOX,GACnBW,EAASC,OAAOF,EAAO,GACvBT,EAASU,GAGTN,aAAaL,MAAQO,KAAKM,UAAUF,IAGlCG,EAAe,SAACJ,GAClB,IAAMC,EAAQ,YAAOX,GAEjBe,EAAOJ,EAASK,QAAO,SAACC,EAAMC,GAAP,OAAaA,IAAMR,KAAO,IAE/B,IAAlBK,EAAK/B,SACL+B,EAAK/B,UAAW,EAIhB+B,EAAK/B,UAAW,EAGpB2B,EAASC,OAAOF,EAAO,EAAGK,GAE1Bd,EAASU,GAGTN,aAAaL,MAAQO,KAAKM,UAAUF,IAGpCQ,EAAWnB,EAAMoB,KAAI,SAACtC,EAAM4B,GAAP,OACrB,cAAC,EAAD,CAAM5B,KAAMA,EAAkBJ,GAAIgC,EAAO7B,SAAU4B,EAAYxB,WAAY6B,GAApDJ,MAG3B,OACI,mCACI,sBAAK/B,UAAU,YAAf,UACI,sBAAKA,UAAU,QAAf,wBAAyBF,EAAMyB,aAA/B,QAAwC,sEAAxC,OAEA,qBAAKvB,UAAU,QAAf,SACKwC,IAGL,cAACjC,EAAD,CAASC,QAnDL,SAAAJ,GACZ,IAAMsC,EAAQ,sBAAOrB,GAAP,CAAc,CAAEjB,KAAMA,EAAMC,UAAU,KACpDiB,EAASoB,GAGThB,aAAaL,MAAQO,KAAKM,UAAUQ,YCtC7BC,MARf,WACE,OACE,mCACE,cAAC,EAAD,CAAOpB,MAAM,+DCMJqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF/B,SAASgC,eAAe,SAM1BZ,K","file":"static/js/main.0c8d2759.chunk.js","sourcesContent":["import '../ToDos.css';\r\n\r\nfunction ToDo(props) {\r\n    return (\r\n        <div id={props.id} className=\"todo\">\r\n            <div className=\"complete\" onClick={() => { props.onDelete(props.id) }}></div>\r\n\r\n            <div className=\"name\">{props.todo.name}</div>\r\n\r\n            {props.todo.favorite === true ? (\r\n                <div className=\"favorite\" onClick={() => { props.onFavorite(props.id) }}></div>\r\n            ) : (\r\n                <div className=\"not_favorite\" onClick={() => { props.onFavorite(props.id) }}></div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDo;","import { useEffect, useState } from 'react';\r\nimport ToDo from './ToDo/ToDo'\r\nimport \"./ToDos.css\";\r\n\r\nfunction AddToDo({ addTodo }) {\r\n    const [value, setValue] = useState(\"\");\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (!value) return;\r\n        addTodo(value);\r\n        setValue(\"\");\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"add-todo\">\r\n            <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Добавить задачу\"\r\n                value={value}\r\n                maxLength=\"300\"\r\n                onChange={e => setValue(e.target.value)}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nfunction ToDos(props) {\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    // Set page title\r\n    if (props.title !== null) {\r\n        document.title = props.title;\r\n    }\r\n\r\n    // Check localstorage\r\n    useEffect(() => {\r\n        if (localStorage.todos !== null) {\r\n            let parseTodos = JSON.parse(localStorage.todos);\r\n            setTodos(parseTodos);\r\n        }\r\n    }, [])\r\n\r\n    const addTodo = name => {\r\n        const newTodos = [...todos, { name: name, favorite: false }];\r\n        setTodos(newTodos);\r\n\r\n        // Add to localStorage\r\n        localStorage.todos = JSON.stringify(newTodos);\r\n    };\r\n\r\n    const deleteTodo = (index) => {\r\n        let allTodos = [...todos];\r\n        allTodos.splice(index, 1);\r\n        setTodos(allTodos);\r\n\r\n        // Add to localStorage\r\n        localStorage.todos = JSON.stringify(allTodos);\r\n    }\r\n\r\n    const favoriteTodo = (index) => {\r\n        const allTodos = [...todos];\r\n\r\n        let Todo = allTodos.filter((item, i) => i === index)[0];\r\n\r\n        if (Todo.favorite === true) {\r\n            Todo.favorite = false;\r\n        }\r\n\r\n        else {\r\n            Todo.favorite = true;\r\n        }\r\n\r\n        allTodos.splice(index, 1, Todo);\r\n\r\n        setTodos(allTodos);\r\n\r\n        // Add to localStorage\r\n        localStorage.todos = JSON.stringify(allTodos);\r\n    }\r\n\r\n    let todoList = todos.map((todo, index) => (\r\n        <ToDo todo={todo} key={index} id={index} onDelete={deleteTodo} onFavorite={favoriteTodo} />\r\n    ));\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"title\"> {props.title ?? \"Без названия\"} </div>\r\n\r\n                <div className=\"todos\">\r\n                    {todoList}\r\n                </div>\r\n\r\n                <AddToDo addTodo={addTodo} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ToDos;","import './App.css';\nimport ToDos from './components/ToDos';\n\nfunction App() {\n  return (\n    <>\n      <ToDos title=\"Мои задачи\"/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}